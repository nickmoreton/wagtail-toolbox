"""
Django settings for testapp project.

Generated by 'django-admin startproject' using Django 3.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

DEBUG = True
ALLOWED_HOSTS = ["*"]
SECRET_KEY = "test-key"

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    "tests",
    "testapp.home",
    "testapp.search",
    "testapp.blog",
    "wagtail_toolbox.checks",
    "wagtail_toolbox.wordpress",
    "wagtail.contrib.forms",
    "wagtail.contrib.redirects",
    "wagtail.contrib.settings",
    "wagtail.contrib.modeladmin",
    "wagtail.embeds",
    "wagtail.sites",
    "wagtail.users",
    "wagtail.snippets",
    "wagtail.documents",
    "wagtail.images",
    "wagtail.search",
    "wagtail.admin",
    "wagtail.contrib.styleguide",
    "wagtail",
    "modelcluster",
    "taggit",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "wagtail.contrib.redirects.middleware.RedirectMiddleware",
]

ROOT_URLCONF = "testapp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(PROJECT_DIR, "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# WSGI_APPLICATION = "testapp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

# LANGUAGE_CODE = "en-us"

# TIME_ZONE = "UTC"

# USE_I18N = True

# USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, "static"),
]

# ManifestStaticFilesStorage is recommended in production, to prevent outdated
# JavaScript / CSS assets being served from cache (e.g. after a Wagtail upgrade).
# See https://docs.djangoproject.com/en/3.2/ref/contrib/staticfiles/#manifeststaticfilesstorage
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "/static/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"


# Wagtail settings

WAGTAIL_SITE_NAME = "testapp"

# Search
# https://docs.wagtail.org/en/stable/topics/search/backends.html
WAGTAILSEARCH_BACKENDS = {
    "default": {
        "BACKEND": "wagtail.search.backends.database",
    }
}

# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
WAGTAILADMIN_BASE_URL = "http://localhost:8000"

# WPI_HOST = "https://wordpress.nickmoreton.co.uk/"

# used in the inspect_host command
WPI_DOMAIN = "http://localhost:8888/"
WPI_PATH = "wp-json/wp/v2/"
WPI_EXCLUDE_ENDPOINTS = [
    "blocks",
    "block-types",
    "menus",
    "menu-items",
    "menu-locations",
    "navigation",
    "plugins",
    "search",
    "sidebars",
    "statuses",
    "taxonomies",
    "template-parts",
    "templates",
    "themes",
    "types",
    "widget-types",
    "widgets",
]
# WPI_WORDPRESS_HOST = {
#     "host": "https://wordpress.nickmoreton.co.uk/",
#     "endpoints": {

#     },
# }
WPI_EXCLUDE_ROUTES = [
    "wp-json/wp/v2/blocks",
    "wp-json/wp/v2/block-types",
    "wp-json/wp/v2/menus",
    "wp-json/wp/v2/menu-items",
    "wp-json/wp/v2/menu-locations",
    "wp-json/wp/v2/navigation",
    "wp-json/wp/v2/plugins",
    "wp-json/wp/v2/search",
    "wp-json/wp/v2/sidebars",
    "wp-json/wp/v2/statuses",
    "wp-json/wp/v2/taxonomies",
    "wp-json/wp/v2/template-parts",
    "wp-json/wp/v2/templates",
    "wp-json/wp/v2/themes",
    "wp-json/wp/v2/types",
    "wp-json/wp/v2/widget-types",
    "wp-json/wp/v2/widgets",
]
# WPI_TRUNCATE_LENGTH = 36
WPI_ADMIN_TARGET_MODELS = [
    # ("blog.BlogAuthor", "wordpress.WPAuthor"),
    # ("blog.BlogCategory", "wordpress.WPCategory"),
    # ("blog.BlogComment", "wordpress.WPComment"),
    # ("blog.BlogTag", "wordpress.WPTag"),
    ("blog.BlogPage", "wordpress.WPPost"),
    # ("blog.BlogPage", "wordpress.WPPage"),
]
WPI_TARGET_MAPPING = {  # used in the transfer data process
    "blog.BlogPage": {
        "fields": [  # fields to transfer on page create
            "title",
            "slug",
            "content",
            "excerpt",
            "date",
        ],
        "stream_field_mapping": {
            "content": "wp_block_content",
        },  # map stream fields to wagtail models
        "related_mapping": [  # map related fields to wagtail models
            {
                "source_field": "author",  # the related object field on the source model
                "source_value": "slug",  # the value to search for update or create
                "target_field": "author",  # the field of the target model to map to
                "target_model": "blog.BlogAuthor",  # the model for the new object
                "model_type": "model",  # the model type (page or model)
                "fields": {  # the fields to transfer on create or update
                    "name": "name",
                    "slug": "slug",
                },
            },
        ],
        "many_to_many_mapping": [  # map many to many fields to wagtail models
            # ("categories", "categories", "blog.BlogCategory"),
            # ("tags", "tags", "blog.BlogTag"),
            {
                "source_field": "categories",  # the related object field on the source model
                "source_value": "slug",  # the value to search for update or create
                "target_field": "categories",  # the field of the target model to map to
                "target_model": "blog.BlogCategory",  # the model for the new object
                "model_type": "model",  # the model type (page or model)
                "fields": {  # the fields to transfer on create or update
                    "name": "name",
                    "slug": "slug",
                },
            },
        ],
        "cluster_mapping": [  # map tagging fields to wagtail models
            {
                "source_field": "tags",  # the related object field on the source model
                "target_model": "taggit.Tag",  # the model for the new object
                "model_type": "model",  # the model type (page or model)
                "fields": {  # the fields to transfer on create or update
                    "name": "name",
                    "slug": "slug",
                },
            },
        ],
        "model_type": "page",  # page is to be created rather than a model
    },
    "blog.BlogAuthor": {
        "fields": [
            "name",
            "slug",
        ],
    },
    "blog.BlogCategory": {
        "fields": [
            "name",
            "slug",
        ],
        "related_mapping": [
            ("parent", "parent", "blog.BlogCategory"),
        ],
    },
    "blog.BlogComment": {
        "fields": [
            "title",
            "content",
            "date",
        ],
        "model_type": "page",  # page is to be created rather than a model
    },
}
WPI_TARGET_BLOG_INDEX = ("blog", "BlogIndexPage")
WPI_INTERNAL_FIELDS = [
    "ParentalKey",
    "OneToOneField",
    "ManyToManyField",
    "ParentalManyToManyField",
]
WPI_API_MODELS = [
    "wpauthor",
    "wpcategory",
    "wptag",
    "wpmedia",
    "wppage",
    "wppost",
    "wpcomment",
]

WPI_PUBLISH_WHEN_PAGE_EXISTS = True
WPI_CLEAN_TAGS = ["div"]

WPI_FALLBACK_BLOCK_NAME = (
    "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder"
)
WPI_STREAM_BLOCK_DEFAULT = (
    "wagtail_toolbox.wordpress.wagtail_builder_utils.richtext_block_builder"
)
WPI_INSPECTOR_DEFAULT_MAPPING = {
    "iframe": "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder",
    "script": "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder",
    "style": "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder",
    "pre": "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder",
    "code": "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder",
    "blockquote": "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder",
    "table": "wagtail_toolbox.wordpress.wagtail_builder_utils.raw_html_block_builder",
    # "h1": "wagtail_toolbox.wordpress.wagtail_builder_utils.heading_block_builder",
}
